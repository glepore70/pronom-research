@database Level9.guide
@author "David Kinder"
@$VER: Level9.guide 4.1 (27.6.2007)
@node main "Level9"

	Level 9 Interpreter v4.1
	An interpreter for Level 9 games in any format,
	including Spectrum snapshots.

	Copyright (c) 1996 Glen Summers
	Copyright (c) 2002,2003 Glen Summers and David Kinder
	Copyright (c) 2005,2007 Glen Summers, David Kinder,
	Alan Staniforth, Simon Baldwin and Dieter Baron

	Level9 is released under the terms of the GNU General
	Public License. See the file COPYING that is included
	with this program for details.

			@{" Introduction      " link intro}
			@{" Supported Formats " link files}
			@{" Starting Level9   " link start}
			@{" Using Level9      " link use}
			@{" History           " link history}
			@{" Credits           " link credits}
			@{" The IF Archive    " link archive}
@endnode
@node intro "Introduction"

During the 1980s a small British company called Level 9, run by two brothers
(Mike and Pete Austin), produced a series of text adventure games for a
variety of computers. These games received considerable critical acclaim and
are probably the best text adventures written for the small cassette based 8
bit computers common in Britain in the 80s.

Level 9 wrote their games using a custom designed system known as "A-Code",
which evolved from games on the 8 bit computers such as the Acorn BBC Model
B, the Sinclair Spectrum and the Commodore 64 to the (then new) 16 bit
machines such as the Amiga and the Atari ST.

From disassembly of Level 9 games there are thought to be four variants of
A-Code, which are detailed below. Thanks go to Paul David Doherty for
analysing the games and producing the table which follows. At present this
interpreter supports v2, v3 and v4 games.

  @{b}v1@{ub}	This was used for the earliest games. Spectrum v1 games had
	black text on a grey background. Games known to be released in
	this format:

		Colossal Adventure
		Adventure Quest
		Dungeon Adventure
		Snowball
		Lords of Time

  @{b}v2@{ub}	These releases were made between 1984 and 1985 (and usually say
	so in the initial copyright message. This version introduced
	the yellow text on a black background which became standard.
	Games in this format were:

		Adventure Quest
		Dungeon Adventure
		Lords of Time
		Snowball
		Return to Eden
		Erik the Viking
		Emerald Isle
		Red Moon

  @{b}v3@{ub}	This format, dated 1986, was used by the largest number of
	releases. These were:

		Worm in Paradise
		The Price of Magick
		The Secret Diary of Adrian Mole
		The Growing Pains of Adrian Mole
		The Archers
		The Jewels of Darkness Trilogy (Colossal Adventure,
		Adventure Quest and Dungeon Adventure released as
		one package)
		The Silicon Dreams Trilogy
		(Snowball, Return to Eden and Worm in Paradise)

  @{b}v4@{ub}	This was used for the Time and Magick Trilogy (Lords of Time,
	Red Moon and The Price of Magick), and all Level 9's new games
        from 1987 onwards:

		Knight Orc
		Gnome Ranger
		Ingrid's Back
		Lancelot
		Scapeghost
@endnode
@node files "Supported Formats"

On several machines (such as the Amiga) Level 9 games were distributed as
an interpreter plus a data file, usually called "gamedata.dat" or something
similar. These games can be played with this interpreter simply by loading
the "gamedata.dat" file.

For the Amiga (and possibly some other formats) the v4 games were released
in three parts, each in a separate data file:

	gamedat1.dat
	gamedat2.dat
	gamedat3.dat

Starting the first game gives a menu from which you can choose which part or
game to play. For this to work the files must have the same basic structure
with a number in it somewhere, e.g. file names

	TimeAndMagick1.dat
	TimeAndMagick2.dat
	TimeAndMagick3.dat

will work.

On other (especially older and smaller) computers the games were distributed
as a single file containing both an interpreter and the game data. Level9
can cope with these files as well, as it automatically searches files for
valid Level 9 games. This however requires that the file not be compressed
in any way. For example, there are several Spectrum snapshots of Level 9
games available which this interpreter can play, but these snapshots must
be in an uncompressed format (e.g. SNA). Commonly snapshots are available in
the compressed Z80 format, but these files can be converted to SNA using the
widely available conversion program "SPConv". Version 1.06 or higher of
"SPConv" is recommended.

Paul David Doherty has written "L9Cut", which can extract Level 9 games from
many different formats. L9Cut can also remove copy protection from Level 9
games. L9Cut can be downloaded from

  http://www.ifarchive.org/indexes/if-archiveXlevel9Xtools.html

This program has been tested on files obtained from releases for the Amiga,
Atari ST, IBM PC, C-64, Spectrum, Atari 800, BBC, Amstrad CPC, Apple 2 and
MSX computers.
@endnode
@node start "Starting Level9"

From the Shell, Level9 can be started with the filename of a Level 9 game,
for example

	Level9 Snowball.dat

If started without a filename, or if the Level9 icon is double clicked from
Workbench, a file requester will appear from which a game file can be
selected.

The following icon tooltypes are supported

    @{b}DIR@{ub}		If started from Workbench, the file requester which
		initially appears will start in this directory. An
		example of its use is

			DIR=Work:Games/Level9

    @{b}FONT@{ub}	This sets the font Level9 uses for all text output.
		The font may either be fixed-width or proportional.
		As an example, the Times font with a height of 15
		pixels would be selected by

			FONT=times/15

		This tooltype is also read if Level9 is started from
		the Shell and the Level9.info icon containing this
		is in the same directory as the program.

    @{b}WINDOW@{ub}	If this tooltype is present Level9 will use a window
		on the Workbench screen, else it will use a custom
		screen.

Level9 requires more than the default stack. The stack in the Workbench icon
has been set to 16384, and as much is recommended when running from the
Shell.

If you wish to run Level 9 games using the standard i/o interface (i.e.
just the shell window), the separate program Level9StdIO is included.
@endnode
@node use "Using Level9"

The text being input to the game can be edited using backspace, delete, and
the left and right cursor keys. The shifted cursor keys move the cursor to
the beginning and end of the current line, respectively. A history buffer
stores the last twenty input lines; use cursor up and down to scroll through
the history, and shift cursor up and down go to the top and bottom of the
history, respectively.

Level9 supports several meta commands, which can be entered on the input
line. These commands are handled by the interpreter rather than being passed
to the game. They are:

  #save		Saves out a game position directly, bypassing any
		prompting (such as for disk changes).

  #restore	Loads in a saved position directly, bypassing any
		protection code within the game.

  #quit		Quits the current game.

  #cheat	Tries to bypass the copy protection code which asks for
		a specific word. This is done by trying every word in
		the game's dictionary. On a slow machine, this can take
		a long time.

  #dictionary	Lists the game dictionary. Press a key to stop the
		listing and return to the input line. Note that the v2
		dictionary appears to have random characters following
		on the end: The original interpreter code to detect the
		end of dictionary does not appear to agree with the
		characters actually at the end.

The following menu options are available:

    @{b}New Game@{ub}	Brings up a file requester with which a new Level 9
		game can be loaded. The previous game will be lost.

    @{b}Save@{ub}	The same as entering "save" on the input line.

    @{b}Restore@{ub}	The same as entering "#restore" on the input line.

    @{b}Help@{ub}	Brings up this help file.

    @{b}About@{ub}	Brings up a requester with information on the Level9
		program.

    @{b}Quit@{ub}	Immediately exits Level9. The current game will be lost.
@endnode
@node history "History"

  v4.1  Corrected a bug that made Lancelot unplayable.
	BBC B bitmaps are now shown as they appeared on the original
	computer (not currently available in this Amiga port).

  v4.0  Implemented support for bitmap graphics (not currently available
	in this Amiga port).

  v3.0	Implemented support for line-drawn graphics (not currently
	available in this Amiga port).
	Fixed a problem with v4 detection that stopped some versions of
	Scapeghost running correctly.
	Implemented an opcode used by the disk based versions of
	Time and Magick, which now means that saving from these games
	works.
	The interpreter now gives you a reasonable amount of time to
	enter the Lenslok code in protected games, and also tells you
	what the code should be.

  v2.0	Revised the description of v4 games to include all the post-1987
	games, which are now supported.
	v2 games are also now supported.
	Added @{"meta commands" link use}.

  v1.0  First release.
@endnode
@node credits "Credits"

The Level9 interpreter was originally written by Glen Summers. The changes
for 3.0 were made by David Kinder (davidk.kinder@virgin.net) with additional
code from Alan Staniforth and Simon Baldwin. For 4.0, David Kinder
integrated the various bitmap decoders, but all the difficult work was done
by Alan Staniforth and Dieter Baron. Alan also supplied the BBC B bitmap
changes for 4.1.

Help, testing and information on the various Level 9 formats was provided by
Paul David Doherty. Testing of the fix for Lancelot in 4.1 was performed by
Guido Mureddu.
@endnode
@node archive "The Interactive Fiction Archive"

If you have access to the Internet and are interested in text adventures,
then you can find all sorts of programs and information at The Interactive
Fiction Archive:

http://www.ifarchive.org/

The latest version of this program can always be found on this site, in

http://www.ifarchive.org/indexes/if-archiveXlevel9XinterpretersXlevel9.html
@endnode

