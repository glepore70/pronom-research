@database 07bfe810-0
@master Systems:Commodore_64/MagiC64.guide
@$VER: 1.7
@author "Nick Sardelianos and Michael Kramer"
@(c) "Michael Kramer and Nick Sardelianos"

@node "Main" "Main"

 MagiC64  Commodore 64 Emulator
 ==============================

	What´s new in this version

	 @{"New features" link "new" 0}

        Introduction

         @{"What´s MagiC64?" link "What" 0}
         @{"A C64-Emulator today?" link "1995" 0}
         @{"...what is a C64?" link "C64" 0}
         @{"System Requirements" link "Requirements" 0}

         @{"Quick Start" link "QuickStart" 0}

        The Emulator

         @{"Copyright and Registration" link "Copyright" 0}     @{"Save" link "Save" 0}
         @{"Graphics" link "Graphics" 0}                       @{"CPU & ROM" link "CPU" 0}
         @{"Video" link "Video" 0}                          @{"Sprites" link "Sprites" 0}
         @{"Sound" link "Sound" 0}                          @{"Joysticks" link "Joysticks" 0}
         @{"Keyboard" link "Keyboard" 0}                       @{"Floppy" link "Floppy" 0}
         @{"D64-Disks" link "D64-Disks" 0}                      @{"T64-Tapes" link "T64-Tapes" 0}
         @{"P00-Files" link "P00-Files" 0}                      @{"Disk State" link "DiskState" 0}
	 @{"C64-Files" link "C64-Files" 0}
         @{"Start" link "Start" 0}                          @{"Quit" link "Quit" 0}

        Floppy Emulation

         @{"Introduction" link "Introduction" 0}
         @{"Supported Functions" link "Supported" 0}
         @{"Non supported Functions" link "NonSupported" 0}

	Hilfsprogramme

	 @{"Monitor" link "Monitor" 0}

        Frequently Asked Questions

	 @{"How to transfer software from C64 to Amiga ?" link "Transfer" 0}
         @{"How to speed up the emulator ?" link "SpeedUp" 0}
	 @{"How to slow down the emulator ?" link "SlowDown" 0}
         @{"Which Programs don´t work ?" link "NotWork" 0}
	 @{"How to change disks ?" link "DiskChange" 0}
         @{"No feedback from the emulator ?" link "Feedback" 0}
	 @{"What are these warnings?" link "Warnings" 0}
	 @{"Where to find C64 software" link "Software" 0}
	 @{"Tips and tricks for some programs" link "Tips" 0}
	 @{"Fast Amiga, slow MagiC64 ?" link "Why" 0}

        @{"History" link "History" 0}
        @{"To Do" link "ToDo" 0}

        @{"Greetings/Thanks and Acknowledgements" link "Greetings" 0}

@endnode

@node "New" "New features"

	New features

 It's now also possible to handle MagiC64 V1.7 completely via keyboard. For
more details see @{"Quick Start" link "QuickStart" }. The emulation itself was also improved,
Smart-Refresh works all the time now and the speed has increased once again.
In addition, some more small bugs in the video emulation were fixed; hence
programs, in which only parts of the screen scroll, are now working much
better. Sprite flickering in games like Exploding Fist and International 
Karate was removed. Actions which are started by hotkeys result in a shorttime
message in a status line which is located in the lower part of the screen. New
hotkeys enable a change in the number of cycles therefore a potential flicker-
ing may be removed directly in the C64 mode. A speedometer (which may be turn-
ed off) makes it possible to adjust the speed of the emulation. Saving to D64
disks works again. A bug concerning the playsid.library was fixed, this bug
could cause MagiC64 to crash under certain circumstances. A french and an
italian catalog were added. For further information please see @{"History" link "History" 0}. A page
with @{"Tips" link "Tips" 0} for some programs was added, too.

You can get the latest releases of MagiC64 from the MagiC64 homepage:

	http://www.ac-copy.com/~magic64

Online registration for credit card owners is possible, too.
 
@endnode


@node "What" "What´s MagiC64?"

        What´s MagiC64 ?


 MagiC64 is a C64 emulator for the Amiga, which tries to emulate a real C64 in
an exact manner. The emulator has the following properties:

        - Complete emulation of the 6510-CPU (including illegal opcodes)

        - Line-by-line VIC emulation
                - All graphics modes
                - Horizontal and vertical scrolling

        - Complete sprite emulation
                - Sprite-sprite collisions
                - Sprite-background collisions

        - Sound emulation with 6581sid.library or playsid.library

        - ROM emulation; you can also use the original ROMs

        - Keyboard and joystick input

        - Floppy 1541 emulation
                - Fastload and fastsave for all programs
                - Nearly all 1541 commands are supported

        - Support for the following formats: D64, T64, P00 and C64

        - Conversion between all formats possible

        - Bitplane optimized graphics functions, on fast Amigas original
	  C64 speed is possible. Graphics cards are supported, too.

        - The emulator is programmed OS-friendly, it runs in a fully
          multitasking environment.

@endnode

@node "1995" "A C64-Emulator today?"

        A C64-Emulator today?


 This emulator was written in a time, when -in my opinion- there were no
reasonable C64-Emulators for the Amiga. Prototype for MagiC64 basically were
the C64-Emulators for the PC, which have reached an impressive quality today.
As a consequence, MagiC64 supports the most common PC formats, because nearly
all C64 programs are available in one of those formats. Another goal during
the development of MagiC64 was a good speed of the emulation. That is why
MagiC64 has very fast bitplane optimized graphic functions. There is no
conversion from chunky to planar, which results in a dramatically improved
graphics performance.

 Now Amiga owners have the ability to use (almost) all the games and programs
of a C64. Although these games and programs do not convince anymore with
today´s sound and graphic standards, they often possess an amazing level of
fun and excitement as they are what we call "original ideas".

 Furthermore MagiC64 has the common features only emulators can offer e.g.
fastload, fastsave and the possibility of freezing and continuing programs at
any time.

@endnode

@node "Requirements" "System Requirements"

        System Requirements


 Any C64 emulation is, if it works line-orientated like MagiC64, quite CPU
intensive. MagiC64 needs at least a 68020 CPU, while a fast 68030 or 68040 is
recommended. Using an A4000 or an Amiga with a fast 68030 CPU board should
guarantee full pleasure during the use of MagiC64, when using a framerate
of 1/3. An 68060 is required for full C64 speed with a framerate of 1/1.

 Add to this, that the graphic functions need some memory for look-up tables,
and there must be a minimum of 1.8Mb of free memory available, which if it is
high-speed fast RAM the emulator works in more confortable manner.

 On the software side one should have Kickstart 2.04 or higher, the special
features of Kickstart 3.0 with regard to screen double-buffering are used,
too. Summarized:

        - MC68020 or higher
        - 1.8 MB free memory (better 32bit Fast RAM)
        - Kickstart V2.04 or higher

The emulator can be used on Amigas without AGA chipset, too.

@endnode

@node "QuickStart" "Quick Start"

        Quick-Start


 The emulator can be started from CLI or Workbench. In the unregistered
version a window will pop-up, showing the copyright and registration
conditions. It can be closed by clicking the OK button. After that you will
see a window with several selection buttons.

 MagiC64 can be used with mouse or keyboard. When using the keyboard, some
keys have the same meaning in different windows. Close windows with 'q',
loading and running programs in different formats is done with 'r', finally
use 'a' for save operations. Cursor keys will work in the file requesters,
use 'Return' for selecting a file, which is the same like loading and
running a file. The emulator will preserve the last window positions, these
positions are saved, too. Thus, you can arrange your own MagiC64 GUI.

 You can reach the C64 mode by clicking the 'Start' button, and return to the
emulator window by pressing the 'ESC' key. By doing this, the actual state of
the emulation is frozen.

 To load and start a program the right format must be chosen under the point
'Disk & Tape'. Both D64 files, which are images of a 1541 disk, and T64 files,
which are tape images, are supported. Finally the P00 files, which represent a
single C64 program, are supported, too. If @{"T64" link "T64-Tapes"} or @{"P00" link "P00-Files"} is chosen, all files in
the coresponding directory are scanned and the C64 names of the programs
appear in a requester. Double clicking on the name of a program loads and
starts it, after returning you to the C64 mode. If you see an empty requester
you can determine the directory in which the files reside by clicking on
'T64-Path' or 'P00-Path'.

 If you want to use @{"D64 files" link "D64-Disks"}, first click 'Load D64'. Select a D64 file.
The directory of the selected disk file will appear in the requester, again
you can load and start a program by double cklicking it. Also use this
method when a program asks for a disk change.

 @{"C64 files" link "C64-Files"} are raw C64 programs (two bytes header followed by program data),
directly select these files in a requester.

 In C64 mode you can cause a reset by pressing F9, which is followed by a
module check, so that module programs are started again. If you press F10
a hard reset is done, which always leads to the initial message of the
emulator.
 
 At any time (even after a program is loaded), the joystick port can be
changed by clicking '@{"Joysticks" link "Joysticks"}'. Changing the joystick port in C64
mode is also possible by pressing the ´*´ key on the numeric keypad.

 If in your opinion the emulator is too slow, you can type a value greater
than 1 in the '@{"Graphics" link "graphics"}' window in the requester 'Framerate 1/'. In C64 mode
you can change the frame rate with the '+/-' keys on the numeric key pad.
On an A4000 you should gain full speed for every program with a value of 3.

 Changing this value also helps when audio sounds strangely. Your preferred
sound emulation is selected in the 'Sound' window. You can choose between
playsid.library and 6581sid.library. Both libraries are not contained in
the MagiC64 distribution, for further information see @{"Sound" link "Sound"}.

 Another possibility of speeding up the emulation is the Fast Mode which
is turned on/off with "." key on the numeric keypad. There is no screen
refresh in the Fast Mode, very useful if a program is decrunched.

 If the scrolling isn't working with a program, sprites are flickering
or raster switches don't work as expected, try to alter the number of
cycles with 'Shift +/-', 'Alt +/-' or 'Shift+Alt +/-' in C64 mode.
Often this will help, so just try.

 'Enter' will stop the emulation without leaving C64 mode.

 All actions with the hotkeys are displayed in the status line.

 The most important keys in C64 mode:

        - ESC            Return to emulator window
        - F9             Reset with module check
        - F10            Reset without module check
	- Enter          Stop emulation
	- *	         Change C64 joystick port
	- /	         Turn on/turn off sound
	- +/-	         Increase/Decrease frame rate
	- [/]	         Decrease/Increase autofire frequency
	- .	         Turn on/turn off fast mode
	- Shift +/-      Increase/Decrease number of cycles
	- Alt +/-        Increase/Decrease start cycle
	- Shift+Alt +/-	 Increase/Decrease number of badline cycles

@endnode

@node "Copyright" "Copyright and Registration"

        Copyright and Registration


There are two versions of MagiC64:

- The unregistered version, in which time in C64 mode is restricted
 to ten minutes. You can copy and distribute the unregistered version
 without any restrictions. If this version is distributed on CD's
 please send me one CD for free.

- The registered version without a time restriction. Copying or distributing
 this version is forbidden.

Snail mail:

        Michael Kramer
        Im Hirschfeld 28
        52222 Stolberg
        Germany

EMail:

        michael_kramer@ac-copy.com

 You can register at the above address or by EMail. The registration fee is
$20 US or 30 DM, payable cash or as Euro cheque. If you like you can send
the same amount of money in your local currency. If you send the money or
the Euro cheque, I´ll send you the keyfile which enables all features.
Online registration for credit card owners is possible via:

	http://www.ac-copy.com/~magic64

Please note: When using cheques ONLY Euro cheques are accepted !

If you like, email me for further information before registering.


Please note:

 For sound you will need the 6581sid.library OR playsid.library, both are
NOT part of MagiC64. The 6581sid.library is part of A64. A demo version of
A64, which contains this library, is available on AMINET. The playsid
library is included in Sidplay. Sidplay is available from Aminet, too.

Please accept the copyright conditions of theses programs.


DISCLAIMER: MagiC64 should be a bugfree product. The author takes no
	    responsibility for any errors or damages occuring when
	    MagiC64 is used.

@endnode

@node "Save" "Save"

        Save


 Save all settings and paths in the MagiC64.prefs file.

@endnode

@node "Graphics" "Graphics"

        Graphics


- Display Video

 If you turn off this option, only a window will pop up when clicking the
'Start' button. The emulation is running in background mode now. Use this, if
you run programs which have no or only some visual output. Emulation speed is
very fast in this mode.

- Synchronize

 Turning on this option means that non displayed frames are synchronized
with the real display. This will result in better music and sound effects.
You should TURN OFF this option if you have a very slow computer e.g. a
plain A1200. This option has no effect if the value 'Framerate 1/' in the 
'Video' menue is equal 1 because every frame is displayed in this case.
You should TURN ON this option if you have a very fast CPU e.g. 68060
otherwise MagiC64 will probably run much faster than a real C64.

- Display Border

 A border is displayed in C64 mode. Some games e.g. Delta or Wizball require
a border for proper working. Please note: Side border sprites are NOT
supported. In some diplay modes the whole screen would not fit on the
display, so you can turn off the border.

- Speed Limit

 Emulation speed will be reduced to the speed of a real C64. Useful for very
fast Amigas with 68060.

- Smart Refresh

 When using Smart Refresh only the parts of the screen , which have changed,
are updated. You can speed up the emulator up to 50%. So turn off in doubt.
Whenever big parts of the screen are updated constantly (e.g. vertical
scrolling) Smart Refresh makes no sense, the emulator will run faster
in this case without Smart Refresh.

- Speedometer

 When using the speedometer the speed of the emulator compared to a real
C64 is displayed in the lower left border. 100% means real C64 speed,
values greater than 100 mean that MagiC64 is faster than a real C64.

- Frame Rate 1/

 With this value you determine which frames of the emulation are really
calculated and displayed on screen. The higher this value is, the faster C64
programs will run, because fewer processing time for the graphics is required.
On values greater than 1 it may happen that sprite collisions are later
recognized. This is not a severe problem for most programs, but very few
programs require a frame rate of 1/1. Recommended values are in range 1 to 5.
Also raise this value if music and sound effects are too slow. In this case
the emulation can´t deliver the sound data for the sound library fast enough.
In C64 mode you can change the frame rate with +/- keys on the numeric keypad.

- Screen Mode

 By clicking on "Select ..." a standard screenmode requester will appear where
you can select the screen mode for the C64 mode. The emulation is running in
320x200, so you should select a mode like PAL or DBLPAL. In other modes e.g.
EURO72 you have a higher frequency, but only part of the screen is used. You
need Kickstart 2.1 for changing the screen mode, as standard mode you have PAL
or DBLPAL.

- Screen Type

In this cycle gadget you can choose between "Amiga-View","Amiga-Screen"
and "8 Bit RTG". Because screen doublebuffering is supported first in
Kickstart 3.0 with special operating system functions, you should use
"Amiga-View" in lower Kickstart versions for optimum performance. Using
Amiga-View you can´t use Amiga M for screen flipping. The multitasking
is not impaired in other terms. "Amiga Screen" does *ONLY* work correctly
in Kickstart 3.0 if you have installed SetPatch 40.16 or higher. If you
don´t have, MagiC64 will crash when using "Amiga Screen".

As a rule of thumb:

	- In OS 2.04 and OS 2.1 you should always use "Amiga
	  View" for performance reasons.

	- In OS 3.0 you have to install SetPatch 40.16 or
	  higher, otherwise "Amiga Screen" won´t work. If
	  you haven´t installed SetPatch 40.16 or higher,
	  choose "Kick 2 Double-Buffering" when prompted
	  at start or use "Amiga View" instead.

	- In OS 3.1 "Amiga Screen" will correctly work.

You can determine the version of your SetPatch program by typing
Version C:SetPatch  in the CLI.

SetPatch 40.16 is available on Aminet in the util/boot directory.

Starting with MagiC64 1.5 graphics cards are supported with 8 Bit RTG.
You will need CyberGfx in this case, with AGA-Amigas you can use
a native 8 bitplane Amiga mode but it's very slow. Because MagiC64
works with bitplanes internally, a planar-chunky conversion must
be done. So 8-Bit modes are always slower than native Amiga modes.

- DB Type

Select the double buffering mode which is used in Amiga Screen
modes. This is possible starting with Kickstart 3.0. In earlier
versions of MagiC64 you had to choose the DB type when starting
MagiC64. Now it's possible to do this every time. For further
information see Screen Type.

- Direct Access

You can speed up MagiC64 somewhat in 8 Bit RTG mode if direct
access to the memory of the graphics card is enabled. Turn on
this feature here.

@endnode

@node "CPU" "CPU & ROM"

        CPU & ROM


- Warning at crash opcode

 When the emulation executes a crash opcode e.g. $02, normally the C64 mode is
left and a warning is given. A real C64 could only be restarted by reset. As a
consequence the warning requester gives the possibility of a reset or contin-
uation of the emulation. Pressing the F10 key is the only action making sense
in this case, when back in C64 mode.

- Warning at break opcode

 The execution of the opcode $00 (BRK) is normally no action of a C64 program
making any sense. You should switch off these warnings if you want to use
monitor programs in the C64 mode.

- Fast BCD Mode

Arithmetic commands of the 6510 can use a special decimal mode. With
fast BCD mode only the carry flag will be set in a correct manner, the
other flags are undefined. Turning off fast BCD mode means that all
flags are set correctly but this surely won't make a difference for
a real world program.

- Skip RAM Test
  
 Normally the C64 RAM is checked during a reset. This test can be switched off
by a ROM patch, which speeds up the reset remarkably.

- ROM Emulation / Original ROM

 Because of copyright reasons the original ROMs are not included, instead ROM
emulation is used. This emulation uses changed ROMs, if you read them out and
put them into a real C64, it will not work. Whoever wants can also use the
original ROMs. They must reside in the ROMs directory, named BASIC.ROM,
CHAR.ROM and KERNAL.ROM.

@endnode

@node "Video" "Video"

        Video


- Rasterline Cycles

 This is a value for the VIC emulation determining how many cycles one
rasterline will consume. You may change this value slightly (!) when raster
interrupts cause flickering on screen. Recommendable values are in the range
60 to 66. In C64 mode you can alter this value with the 'Shift +/-' keys.

- Badline Cycles

 This determines the number of cycles a badline is consuming. Badlines are
rasterlines in which the CPU has fewer cycles available because these cycles
are required by the VIC. Change only slightly. Recommendable values are in the
range 20 to 24. Use 'Shift+Alt +/-' in C64 mode.

- Start Cycle

 Determines the cycle in which the VIC will begin to fetch char data. For
vertical scrolling it is important whether the scroll register is written
before or after this cycle. Change this value when vertical scrolling doesn´t
work properly. Recommendable values are in the range 12 to 18. In C64 mode
you can use 'Alt +/-'.

- PAL / NTSC 
  
 Determines how many lines the emulation is internally using. Some games only
work in one of the two modes. If you use NTSC the emulation will run somewhat
faster because fewer lines have to be calculated. On the other side the C64
CPU has fewer cycles per frame available.

@endnode

@node "Sprites" "Sprites"

        Sprites


- Display Sprites

 Turn on sprites. Turning off sprites speeds up the graphics, but makes no
sense for most games.

- Sprite-Sprite Collisions

 Turn on sprite-sprite collisions. If you turn off this option, graphics may
speed up a little bit. Many games use their own collision detection instead of
the hardware detection anyway, so turning off this collisions can make sense.

- Sprite-Background Collisions

 Turn on sprite-background collisions. Only few games use hardware
sprite-background collision detection, so turning off these collisions may be
helpful. Graphics performance is improved in this case.

 The above options act for all sprites together. In the individual settings
options you can do the above settings for single sprites. You can construct
trainer versions of games by turning off the collisions for the sprite the
player is driving. This only works if games use hardware collision detection.

@endnode

@node "Sound" "Sound"

        Sound


 The 6581sid.library OR playsid.library is required. These librarys are NOT
part of MagiC64. A demo version of A64, another C64 emulator for the Amiga
(which became commercial from version 3), contains this library. A64 is
available in AMINET. The playsid.library is included in Sidplay. You can
get Sidplay from Aminet, too.

Please note: playsid.library will not work with 68060 and this library
	     will not work with Executive because both are using common
	     resources (timers). Some people stated that versions of
	     the playsid library exist which are working with 68060.
	     So maybe there's a patched version of this library, please
	     let me know if you have information.

 Both libraries have some advantages: 6581sid.library is fast but output
sometimes is a little bit poor. playsid.library produces nice sound
quality but requires a lot more computing time.

- Emulation

 Choose your prefered sound library. If the library is not installed 
in the LIBS: directory you won´t hear anything. It's possible to switch
between the two libraries on the fly, but sometimes sound will be available
again only after a reset in C64 mode (F10).

- Sound on

 Turn on music and sound effects. Turning off may be useful in games with bad
music. In C64 mode you can turn on and turn off the sound with the ´/´ key
on the numeric keypad.

- Channels

 Turn on the three channels individually.

- Volume

 With this slider gadget you can regulate the maximum volume for all three
channels.

@endnode

@node "Joysticks" "Joysticks"

        Joysticks


- Joystick settings

 Amiga and C64 both have two digital joystick ports. Because the Amiga uses
port 0 for the mouse, you can redirect the input of port 1 to the virtual
ports 0 and 1 of the C64. It´s possible to direct one Amiga port to two C64
ports at the same time. If you choose this setting every game should work,
independent of which port is used. There can be some strange effects if a game
uses the C64 port 0 and the keyboard at the same time because at the C64 port
1 is connected parallel to the keyboard. Of course for games with a two-player
mode the Amiga port 2 can also be used, but then the mouse must be taken off.
(you knew this, didn't you? ;) Changing the joystick port in C64 mode is
possible if you press * on the numeric keypad.

If you choose "No C64 port" you can simulate joystick input via the
numeric block of the keyboard. See the following picture for the directions,
the keys 0 and 5 correspond to Fire:


		7   8   9

		  \ | / 

		4 - 5 - 6

		  / | \

		1   2   3


- Autofire settings

 Set the autofire frequency for the Amiga port here. A frequency of 0 means
no autofire for the port, a frequency of 1 is the same like pressing the
fire button constantly. Some games can´t be fooled in this way, so you have
to choose a frequency of 2 or higher. The autofire is ´intelligent´, 
pressing the fire button the first time will turn on autofire, pressing the
fire button the second time will turn off autofire, so you can release the
fire button in the mean time. You can decrease/increase the frequency in
C64 mode with the ´[´ and ´]´ on the numeric keypad.

@endnode

@node "Keyboard" "Keyboard"

        Keyboard


- Original / National

 When original mode is running, the emulator tries to copy a C64 keyboard
physically in a nearly exact way. In this mode are e.g. in German Y and Z
exchanged, the # key is covered with = etc. This mode makes sense for games,
which depend upon a certain location of the keys on the keyboard. On the
contrary, in the national mode every key is treated corresponding to the
national location of the keys and the key is translated into the correct C64
key press. 

In both modes some keys have a special meaning:

- ESC
 The emulation is frozen and returns from C64 mode to the main window of the
emulator. There you can change some settings, after that press "Start" to
continue in C64 mode (no reset).

- F9
 Reset of C64 emulation. A module check for a module at $8000 is done. If
there is a module, the module program will be started, otherwise the initial
C64 message will appear on the screen.

- F10
 Hard reset of the C64 emulation. There is no module check, the emulation
always returns to power-up message.

- Enter (in arithmetic keypad)
 Stops the emulation without leaving C64 mode. After pressing the enter key
for a second time the emulation is continued. This key is useful if you want
to look carefully at a situation during a game. It is also possible to save
the the screen with a screengrabber program.

- Ctrl
 Corresponds to the RUN/STOP key of the C64.

- Help
 Corresponds to the RESTORE key of the C64.

- TAB
 Corresponds to the Ctrl key of the C64.

- Del
 Corresponds to the CLR/HOME key of the C64.

- left Alt
 Corresponds to the Commodore key of the C64.

- right Alt
 Corresponds to the @ of the C64.

- right Amiga
 Corresponds to the ´ of the C64.

- left Amiga
 Does a keyboard reset in the national mode. Press this key when the keyboard
is blocked.

- Cursor keys
 Cause the equivalent C64 function.

@endnode

@node "Floppy" "Floppy"

        Floppy


 Under this label, adjustments concerning the emulation of a 1541 floppy, are
put. The 1541 emulation works on D64 files. More about D64 files in the
corresponding chapter.

- Floppy on

 Here the 1541 emulation can be switched off; subsequently the C64 emulation
assumes that there is no floppy. If you enter e.g. LOAD"$",8 the computer will
announce "DEVICE NOT PRESENT". Switching off the floppy can make sense when
P00 or T64 files try to load some data again e.g. highscore lists.

- Disk Access Indicator

 Everytime the floppy is accessed you will see a red label ´DISK´ in the
right bottom of the screen in C64 mode. You can turn off this indicator here.
For technical reasons you won't see a logo in 8 Bit RTG mode.

- Write Protection
 
 Effects the write protect status of the actual D64 file. When selected, this
D64 file in memory, will not be changable by the user. This option is useful
if you want to prevent files written or changed.

- Warning at non-supported commands

 A real 1541 is (well... was) an independent computer including a processor,
RAM and an operating system. Nevertheless the 1541 emulation only emulates a
1541 on the commanding level. Therefore some commands, e.g. M-E
(Memory-Execute), which execute some own programs in the Ram of a 1541, are
not supported. Unfortunately because of that some programs, which use
fastloader or execute other complex actions (copy protection) in the floppy,
do not function. If you try to execute such commands, the C64 mode is left and
a warning is given. With this switch you can turn off these warnings.

- Write on protected disk

 A warning is given, if you try to write on a write-protected D64 disk. You
can prevent these warnings with this switch.

@endnode

@node "D64-Disks" "D64-Disks"

        D64 Disks


 D64 files are files which represent one side of a 1541 disk. This format was
introduced with C64S, a C64 emulator for the PC. With the time it developed to
one of the standard formats for C64 emulators. You can find nearly all C64
programs as a D64 file. MagiC64 loads the whole D64 file into memory, the 1541
emulation is doing all commands in memory, too. If you want write operations
to become permanent, you have to save the D64 file explicitly. This Save
option is only available in the registered version of MagiC64.

- Selection Requester

 Here you will see the directory of a D64 file which was loaded into memory
with "Load D64". The first line in the requester shows the name of the disk,
followed by its ID and format sign. Clicking the line makes no sense. The
following lines show the single programs contained in the D64 file. The number
on the left side of the name gives you the size of the program in blocks of
256 bytes (like a real C64 does). On the right side the type of the program is
given. Doubleclicking one of these lines, pressing 'Return' or the 'r' key will
lead to a reset in the background, next the C64 mode is entered and the program
will be loaded and started. The last line of the listing gives information
about the free blocks of the D64 file.

- Load

 Loads a program from a D64 file into the memory. There is NO reset into the
background and there is no automatic return to the C64 mode. Loading is very
fast, even very big files (bigger than 200 blocks) will be loaded in few
seconds. All data is loaded in the C64 memory, the I/O range is not touched
during loading. Because of that it´s possible to load programs bigger than 202
blocks, on a real C64 you can´t do this without special loading functions.

- Load + Run

 Same action like double-clicking a program name in the selection requester.
Contrary to "LOAD" a reset in the background is forced and there is automatic
return to the C64 mode.

- Load D64

 After clicking this button you can select a D64 file in a standard requester.
The directory of this D64 file will appear in the selection requester. This is
the same action like inserting a disk in a 1541, so use this if a C64 program
asks you to change the disk.

- Save D64

 A D64 file is saved. Click this button if you wish to make changes to a D64
file, permanent, because the 1541 emulation will only work in memory.

- Save

 A C64 program is written to the actual D64 file in memory. The file is only
changed in memory. To make the changes permanently you have to click 'Save
D64', too. Saving has the same properties like loading: High speed and it´s
possible to save programs bigger than 202 blocks.

- Format

 Formats a D64 file in memory. After klicking this button you have to enter
the disk name and the disk ID. This is equivalent to the 'NEW' command of the
1541. If you want to create an empty disk, load a D64 file with 'Load D64',
click 'Format' and then save the file with 'Save D64' under a DIFFERENT name.

- Delete

 After queryback a program in a D64 file is deleted in memory. This is
equivalent to the 'SCRATCH' command of the 1541.

- Rename

 After queryback a program in a D64 file is renamed in memory. This is
equivalent to the 'RENAME' command of the 1541.

- Initialize

 After queryback a D64 file is initialized in memory. The BAM of the disk is
read into memory, so it´s possible to distinct disks with the same ID. This is
equivalent to the 'INITIALIZE' command of the 1541.

- Validate

 After queryback a D64 file is validated in memory. All files still open are
closed, the BAM is updated. This is equivalent to the 'VALIDATE' command of
the 1541.

@endnode

@node "T64-Tapes" "T64-Tapes"

        T64 Tapes


 The T64 format was introduced with C64S, too. T64 tapes are C64 tape images.
There can be more than one program in a T64 file.

- Selection Requester

 The contents of ALL T64 files are displayed. Double-cklicking selects the
related T64 file, then the selected program is loaded in memory and started.

- Load

 Loads the selected program from a T64 file into the C64 memory. NO reset in
the background is done and there is no automatic return to C64 mode.

- Load + Run

 Same as double-clicking a name in the selection requester: Reset in the
background, return to C64 mode, loading and starting of the program.

- Save

 After queryback a program is saved from C64 memory into a T64 file. The name
you enter will appear in the selection requester. The range given in memory
locations $2B/$2C and $2D/$2E is saved. It´s possible to save programs with an
end address bigger than $CFFF. The T64 file written is new, existing files are
overwritten.

- T64 Path

 A standard requester will appear where you can select the new T64 directory.
If you click 'OK' all files in this directory are scanned. This can take a
while when the directory contains many files. The contents of the T64 files
will appear in the selection requester.

@endnode

@node "P00-Files" "P00-Files"

        P00 Files


 The P00 format was introduced with the C64 emulator PC64. Every P00 file
represents a single C64 program.

- Selection Requester

 The contents of ALL P00 files are displayed. Double-clicking selects the
related P00 file, then the selected program is loaded in memory and started.

- Load

 Loads a selected program from a P00 file into the C64 memory. NO reset in the
background is done and there is no automatic return to C64 mode.

- Load + Run

 Same as double-clicking a name in the selection requester: Reset in the
background, return to C64 mode, loading and starting of the program.

- Save

 After queryback a program is saved from C64 memory into a P00 file. The name
you enter will appear in the selection requester. The range given in memory
locations $2B/$2C and $2D/$2E is saved. It´s possible to save programs with an
end address bigger than $CFFF. The P00 file written is new, existing files are
overwritten.

- P00 Path

 A standard requester will appear where you can select the new P00 directory.
If you click "OK" all files in this directory are scanned. This can take a
while when the directory contains many files. The contents of the P00 files
will appear in the selection requester.

@endnode

@node "C64-Files" "C64-Files"

        C64 Files

C64 Files are files in the original C64 format. The first two
bytes contain the start adress followed by program data.

@endnode

@node "DiskState" "Disk State"

        Disk State


 The current state of the 1541 emulation is displayed. The message contains
number, text, track and sector.

- Read State

Read the state and reset back to OK state.

@endnode

@node "Start" "Start"

        Start


 Guess what? The emulation is started or continued at the point it was
frozen.

@endnode

@node "Quit" "Quit"

        Quit


 This button does a very complicated function, but I can't tell you what, as
it is a secret. Try to find out youself.


;-)

@endnode

@node "Introduction" "Introduction"

        Introduction


 The 1541 floppy is emulated on file and buffer level. The 6502 CPU and the
special hardware are NOT emulated. Random access files are only readable.

@endnode

@node "Supported" "Supported Functions"

        Supported Functions


- LOAD and SAVE of programs. The wildcards * and ? are possible.

 Saving to a D64 file is also possible in the unregistered version of MagiC64,
but you can´t the save D64 file itself. Overwriting a file with a @ at the
beginning of the name works always correct unlike to a real 1541. Random
access files are readable only.

- Directory

 All file types, protected (<) and not closed (*) files are displayed.
Wildcard and filetype selection while loading a directory is possible.

- Direct Access

 It´s possible to reserve buffers in the floppy with #, some floppy commands
will utilize these buffers.

- Error Channel

 All error and state messages are supported.

- Floppy Commands

 Scratch, Rename, Initialize, New and Validate are supported. The Copy command
can´t append data to existing files, it´s only possible to duplicate files
with this command. Block-Read, Block-Write, Block-Allocate and Block-Free are
possible, the equivalent User commands are supported, too. The buffer pointer
can be set with the Buffer-Pointer command. Memory commands will work in the
buffer range. The P command for random access files is supported, too.

@endnode

@node "NonSupported" "Non supported Functions"

        Not Supported Functions


 All commands which execute their own code in the 1541 wont work, e.g.
Block-Execute, Memory-Execute, the User commands 3 to 8, and the & command. So
programs using their own fast loaders will not run. It's not possible to
write random access files.

@endnode


@node "Monitor" "Monitor"

	The monitor MagicMon

	MagicMon is a very powerful 6510 monitor which offers extended
	breakpoint possibilities and assembling with labels.

	The monitor is activated by clicking the monitor button. After
	this the monitor always will be activated when pressing ESC
	in C64 mode or when a breakpoint is executed.

	Using the 'x' command you can quit the monitor, the monitor
	window will be closed and all breakpoints are cleared. If
	you use the 'q' command instead the window will stay open,
	the breakpoints are not deleted. The 'g' command will return
	to C64 mode, the program will run as long as no breakpoint
	is detected or ESC is pressed.

	The online help of MagicMon is revealed if you use 'h'.
	Additional information for commands is available with
	h "command".

	Most commands are self explainatory, so only MagicMon's
	special possibilities are introduced in detail.

	The assemble command 'a startadr' will output the starting
	address staradr, you can now enter any 6510 command. All
	command including illegal opcodes are supported. You
	can quit assembly mode by pressing 'Return' without entering
	any command or by entering 'f' followed by 'Return'. In the
	later case the program will be listed again, all labels
	are resolved. Labels in th form of Mxx preceed the commands
	where xx is a hexadecimal number between 00 and 3F. Labels
	can be used with branch commands or with any load/store
	command. You could enter the following program starting
	at address 4096 ($1000) with 'a 1000':

		1000     ldx #00
		1002 m02 lda m00,x
		1005     beq m01
		1007     jsr ffd2
		100A     inx
		100B     jmp m02
		100E m01 rts
		100F m00 .0d
		1010 	"HELLO"
		1015     .00

	The program will output 'HELLO' to the screen if called
	by entering SYS 4096 from C64 mode. Please note that you
	can enter single bytes to the program with .xx, complete
	strings are enclosed by ".

	Breakpoints can be set with 'b breakpointadr', whenever
	this address is reached, program execution is stopped
	and MagicMon is called. In addition an address mask
	can be specified with &. This mask will be ANDed with
	the address and thus only address ranges can be defined.
	It's also possible to define a breakpoint counter, in
	this case the breakpoint will be activated when the
	program has reached the breakpoint address counter
	times. Last parameter could be a memory configuration
	between 0 and 7. This number corresponds to the lower
	three bits of CPU port 1. In this way you could define
	breakpoints that become active when a programs run in
	the ROM area.

	A special feature of MagicMon are memory breakpoints,
	that become active if a memory place or memory range
	is accessed. You can divide these breakpoints in read
	and write breakpoints, in addition you can specify a
	value. When reading or writing this value the breakpoint
	becomes active. Again it's possible to add a value mask
	and thus to break on the setting or clearing of individual
	bits in memory places. You will find examples in the online
	help. If a breakpoint occurs the command responsible for
	the break and the following command will be listed.

	Breakpoints can be listed with 'bl', deleting them
	requires the 'bk' command. When defining breakpoints
	the emulation will run slower, that's especially
	true for memory breakpoints.

	You can single step programs with 't', 'ts' will
	step through a complete subroutine. Because C64 mode
	will be entered for a short time with every trace,
	you can turn on the video display with 'v'.

	Information about hardware is given with the info
	commands ci,si,vi,mi and ii, which will print
	detailed information about the current state CIA's, the
	SID, the VIC, the current memory configuration and
	interrupt vectors.

	With 'f' and 'fa' there are two comfortable search
	commands.

	You can load and save C64 programs (lc,sc) and raw
	data (l,s). It's possible to load from or to save
	to D64 disks with the 'ld' and 'sd' commands.

	You can access D64 blocks with the 'rb','sb' and 'wb'.

	Redirect the output with the 'o' command, put byte
	sequences to memory with the ':' command. List or
	change register contents with the 'r' command.
	With a preceded '.' you can run any Amiga DOS command
	from within MagicMon. Disassemble programs with 'd',
	memory dumps are possible with 'm'. You can set the
	number of output lines for both commands with the
	'ln' command. 

@endnode

@node "Transfer" "How to transfer software from C64 to Amiga ?"

	How to transfer software from C64 to Amiga ?


	It's not possible yet with MagiC64 to connect a 1541 to the
	Amiga. However, there are a lot of freeware programs for this
	purpose. Here's a little list including the aminet directories
	where you can find these programs:


	- Easy1541 by Fabrizio Farenga

	  Connect a 1541 via special cabling to your Amiga. Then create
	  D64 files from your disks or extract single files from the
          disks. Very good program, highly recommended !

	  /misc/emu/Easy1541.lha	  


	- 1541 Disk Reader by Dan Babcock

	  Read C64 disks with an Amiga 5.25 inch drive. You can
	  create D64 files or read single files from the disks.

	  /misc/emu/1541.lha


	- Datasette 64 by Holger Schemel

	  Convert digitized turbo tape files to a MagiC64 readable
	  format with this program.

	  /misc/emu/d64.lha


	- Frodo C64-Emulator by Christian Bauer

	  Connect a 1541 to the Amiga via special cabling and transfer
	  programs to the Amiga. Schematics included in the guide.

	  /misc/emu/Frodo.lha


	- Trans64 and StarCommander for PC's

	  Both programs allow connecting a 1541 to the PC via special
	  cabling.

	  You can find these programs on emulation related archives
	  e.g.

		frodo.hiof.no

@endnode



@node "SpeedUp" "How to speed up the emulator ?"

        How to speed up the emulator ?


 	Do the following things in the Graphics window:

	  - Increase Frame Rate

	  - Turn off Synchronize

	  - Turn off Border

	  - Turn off Speed Limit

	  - Turn on Smart Refresh

	  - Use native Amiga modes

	  - Use Amiga Screen instead of 8 Bit RTG

	  - Turn on Direct Access when using a graphics card


	In the Sprites window:

	  - Turn off Sprite-Background collisions

	  - Turn off Sprite-Sprite collisions


	In the Sound window:

	  - Choose No Emulation (means no sound)


 Please note: You should have a fast 68030 (40 Mhz) or a 68040 for decent
speed.

@endnode

@node "SlowDown" "How to slow down emulator ?"

	How to slow down the emulator ?


	In the Graphics window:

	  - Turn on Speed Limit. This will reduce the emulation
	    speed to original C64 speed on very fast Amigas.

@endnode

@node "NotWork" "Which Programs don´t work ?"

        Which programs don´t run with MagiC64 ?


 All programs using their own fast loaders won't run with MagiC64. Side
border sprites will not be displayed, the sound emulation has problems
with complex sound effects. In-line graphics effects aren't displayed
correctly.

@endnode

@node "DiskChange" "How to change disks ?"

	How to change disks ?


	- Press 'ESC' to leave C64 mode

	- Enter D64 window

	- Choose 'Load D64'

	- Load the D64 file containing the new disk

	- Return to main window

	- Return to C64 mode with 'Start'
	
@endnode

@node "Feedback" "No feedback from the emulator?"

        No feedback from the emulator?


 Maybe you have pressed 'Enter' (in numeric keypad). Just press 'Enter' again
and there you go. In national keyboard mode the keyboard sometimes is blocked,
in this case press the left Amiga key. Some games require the joystick in the
other port, you can change the joystick port in the 'Joystick' menu. In any
case it should be possible to leave the C64 mode by pressing ESC, if not...
this could be an error in the emulator.

@endnode

@node "Warnings" "What are these warnings?"

	What are these warnings?


 Sometimes the emulator switches from C64 mode to Amiga mode and displays
a warning. There are three types of warnings possible:

	1. Crash Opcode executed. In this case the C64 program mostly is
	   defect. Try the program on any different emulator, if it runs
	   please contact the author because this is a bug in the emulation
	   in this case.

	2. Break Opcode executed. In most cases the program is defect.
	   Some programs e.g. machine language monitors use this opcode.
	   Turn off the warnings in the CPU-ROM window in this case.

	3. Not supported floppy command (B-E,M-E). The C64 program tries
	   to run a program in the floppy 1541. This ist not supported
	   by the emulator, so programs with fastloaders will fail.

@endnode

@node "Tips" "Tips and tricks to some programs"

	Tips and tricks to some programs

 On this page you should find help for programs not running or running
badly with the standard settings of MagiC64. If you find good settings,
please let me know. These are the standard settings:

	- Cycles = 63

	- Badline Cycles = 23

	- Start Cycle = 15

You can change these settings with hotkeys in C64 mode.

For some games, many intros and demos you'll notice some flickering with
raster changes, especially from border to screen. Often setting Cycles to
64 will help, sometimes you have to change the Badline Cycles, too.

Settings for special programs:

	- Flash Gordon Part 1	Framerate 1/1

	- Fusion Intro		Press 'q' and 'SPACE' simultaneously
				to quit the intro.

	- Highlander Part 1	Start Cycle = 30

	- Infernal Runner	Framerate 1/1

	- Infocom adventures	When asked for floppy type, enter
				NO 1541.

	- Inspector Gadget	Start Cycle = 30

	- Tornado Low Level	Framerate 1/1. You can increase the
				rate in the game again.

	- Turrican I		Cycles = 64
				Badline Cycles = 64

	- Zenji			Cycles = 64

@endnode

@node "Why" "Fast Amiga, slow MagiC64 ?"

	Fast Amiga, slow MagiC64 ?


 When using a line-oriented C64 emulation like MagiC64 a huge amount of data
has to be computed. 1,5 MB of screen data has to be computed in one second.	
Smart Refresh will help a little bit, but requires difficult data structures
for proper work (you can't use a MMU in this case). A FPU isn't helpful, too.
You can't compare a C64 emulation in terms of speed with e.g. a Spectrum
emulation. C64 hardware is much more complicate, emulation of sprites is
very time intensive (no, you can't use Amiga sprites). Dynamic recompilation
of code also doesn't make much sense, because 1) video emulation requires
much more time than the CPU emulation, 2) this means self-modifying code,
Motorola CPU's have some problems with this kind of code, 3) you always have
to count the cycles which means only little difference to interpreted code.
And why is A64 that fast ? Well, why does have A64 so many problems with
complicated raster effects ? Simply put, you'll need a 68060 for full emu-
lation speed with a framerate of 1/1 when using a line-oriented emulation.
Please note, that C64 emulators for PC's require at least a 66 Mhz 486 for
full speed, this equals the speed of an 40 MHz 68040. So you won't see
a full speed C64 emulation for your 14 Mhz 68020 Amiga, if you don't
believe this, write a new emulation. I'll happy to see one :-)

@endnode

@node "History" "History"

        History


* = bug fix        N = addition

1.0
        - First Aminet release.


1.01
 *  	- Wrong 68020 detection fixed

	- Amiga View is now default

     
1.1	
 *	- The emulator did not run under OS 2.04 or 2.1. Fixed.

 *	- Due to a bug in OS 3.0 "Amiga Screen" didn´t work.
	  Install SetPatch 40.14 or higher to fix this. If you
	  use OS 3.0 a selection requester will appear at start.

 *	- When Double-Klicking a program to load and start it,
	  sometimes only a reset was performed. In worst case
	  the C64 screen stayed open, when leaving C64 mode.
	  This should be fixed now.

 *	- In national mode the keyboard often was blocked. Fixed.

 *	- Some colors in the color palette simply were wrong.
	  Fixed.

 *	- The 6510 commands PHP and BRK did not work correctly.
	  The DDR 0 was not used, too. All three bugs fixed.

 * 	- It´s now possible to create an empty D64 disk by clicking
	  "Format" when no D64 file was loaded previously.

 N	- You can now explicitly synchronize not-displayed frames.
	  Turning off (default) this option in the graphics menue
	  will speed up the emulator, especially on slower Amigas.

 N	- Many people asked for a plain C64 format. Here it is.

 N	- Registering with keyfile is now possible. The keyfile
	  is valid for all updates.

 N	- ftp.ac-copy.com is now the official MagiC64 support suite.
	  In the directory /pub/amiga you will find new versions
	  of MagiC64 and a file c64progs.lha which contains about
	  100 games in P00 format.


1.2 (22.12.1995)
 *	- Double-Klick reset problem finally fixed.

 *	- VIC 6569 emulation

		- MagiC64 produced trash on screen when 38 char
		  mode was on and the horizontal scrolling register
		  contained a value not 0. This bug affected MANY
		  games and crashed the whole emulator in worst
		  case. Fixed.

		- In vertical scrolling games top and bottom of the
		  scrolling area often were trashed. Fixed in nearly
		  all cases but sometimes you can´t avoid minor
		  display bugs.

		- Better sprite timing. (International Karate)

	- CPU 6510 emulation

		- The upper three bits of 0 and 1 were always
		  cleared. Fixed. (Bruce Lee, Zorro)

	- CIA 6526 emulation

		- ´Reversed´ keyboard input is now possible.
		  (Pitfall II, Johny Rebb II and many others)

		- IRQ´s and NMI´s sometimes were not acknowlegded.
		  (Ghosts and Goblins)

		- Timers run more accurate now.

	- Floppy 1541 emulation

		- Many little errors fixed.

 *	- Pressing ESC when the emulator was halted with ENTER
	  crashed MagiC64. Fixed.

 * 	- The listview gadgets sometimes were not refreshed
	  properly. Fixed.

 N	- New features in floppy 1541 emulation:

		- Read, write and append SEQ files.

		- Load ISEPIC programs.

		- Using wildcards when loading the directory
		  is now possible.

		- You can now use drivenumbers in filenames.

 N	- Window positions are saved in a file.

 N	- When clicking the P00-Path or T64-Path gadget you
	  select a path and not a file. As a consequence
	  path requesters will appear now.

 N	- T64 files with no name are displayed with <filename.t64>
	  in the listview gadget.

 N	- Hotkeys for changing the frame rate (+/-) and the
	  joyport (*) in C64 mode.

 N	- In the registered version a warning is given when you
	  want to change the D64 file and the previous D64 file
	  was written. Your Double-Buffering selection at the
	  start of MagiC64 is saved, too.

 N	- Some new catalogs, a german guide and a swedish guide
	  were added.


1.21 (25.12.1995)
 *	- Bug when calling LayoutMenus (Enforcer-Hit) removed.

 N	- MagicWB Icons added.


1.3 (14.1.1996)
 *	- VIC emulation

	  	- In PAL mode 313 instead of 312 lines were computed.
		  This bug affected games like Nemesis and Rainbow
		  Islands.

		- In multicolor graphics mode sprite background
		  collisions sometimes were not detected (Thrust)

	- CIA emulation

		- Complety rewritten. Is shorter and more reliable now.

		- The wrong bit for coupled timer mode was used.
		  (Ballblazer)

	- CPU 6510 emulation

		- PLP always set the B flag. Fixed.

		- In memory mode $01=01 ROM instead of RAM was read.
		  (Park Patrol)

	- Floppy 1541 emulation

		- It was not possible to read files or the
		  directory from disks with the first two BAM bytes
		  pointing NOT to the first directory block. Fixed.

		- The wildcard * sometimes was not properly handled.
		  (Bangkok Knights)

 *	- Two enforcer hits removed (read access to 0), which occured
	  in rare cases.

 N	- playsid.library is now supported.

 N	- ´Intelligent´ autofire option added.

 N	- Disk access indicator.

 N	- New hotkeys for sound, autofire and the Fast Mode. 


1.5 (3.7.1996)
 * 	- CPU 6510 emulation

	  - all flags in BCD mode are set in correct way

	  - all illegal opcodes are supported

	  - Bugs with some illegal opcodes removed 
	    (On Court Tennis)

 *	- VIC emulation

	  - Sprite-Sprite and Sprite-Background interrupts
	    are stopped as long as the corresponding registers
	    are not read. (Potty Pigeon)

 *	- Floppy 1541 emulation

	  - Random access files can be read now, the P command
	    is supported, too. (Castle Wolfenstein)

	  - Loading directory with wildcards AND drive number
	    specified works fine now. (Dr. Creep)

	  - When a file is opened, a former file on the same
	    channel is closed first. (Creatures)

 *	- SID emulation

	  - Writing to the volume register corrupted the status
	    register of the 6510 CPU. Fixed.

 *	- The screen is positioned correctly in all modes
	  when using Amiga View.

 *	- MagiC64 should work fine with the task scheduler
	  Executive now.

 *	- Green flickering when running Jumpman removed.

 N	- MagicMon 6510 monitor

 N	- Smart Refresh mode

 N	- Slowdown for very fast Amigas.

 N	- Support for graphics cards (CyberGfx).

 N	- Joystick input via numeric keypad.
 
 N 	- All features available in the unregistered version.
	  There is a time limit of 10 minutes in C64 mode now.


1.7 (1.12.1996)

 *	- CPU 6510 emulation

		- correct flags in BCD mode for SBC. (Joe Blade)

		- one illegal opcode fixed. (Ms. Pacman)

 *	- VIC emulation

		- Smart Refresh now works with every mode and is faster.

		- Border is displayed faster.

		- Border 4 pixel higher at top and bottom.

		- Writing to the collision registers is ignored.
		  (Phantoms of the Asteroid)

		- When diplay is scrolled in X-direction and
		  38 char bit is not set, the background color
		  is displayed. (Pesky Painter)

		- Idle display with illegal modes will show black
		  and not the $3FFF value. (Paperboy, Druid)

		- Internal counters are now refreshed in illegal
		  modes. Many programs where only parts of the
		  screen are scrolled will run smoother and without
		  visual artefacts now. (Druid, Rambo)

 *	- CIA emulation	

		- Coupled timers ran twice as fast as they should.
		  Fixed. (Enduro Racer)

		- When running timers with very little intervalls,
		  the whole intervall is used now. (Phantoms of Asteroid)

 *	- Floppy emulation

		- Save to D64 disks didn't work anymore in 1.5.
		  Fixed. In addition it's now possible to save files
		  bigger than 160 blocks.

		- Disk access indicator will work in every mode now.

 *	- Emulator could crash when using playsid.library and
	  Executive under Kick 3.0.

 N	- Emulator usable via keyboard now.

 N	- Fallback to standard screen mode, when screen mode in
	  prefs file not available.

 N	- Sprite cache for better emulation speed.

 N	- Speedometer.

 N	- Hotkey actions are displayed in a status line.

 N	- Double buffering selection under Kick 3.0 will only
	  appear when first starting MagiC64, same with the
	  warning, when no sound library is available.

 N	- French guide and catalog.

 N	- Italian catalog.


1.7 (8.12.1996)

 *	- Emulator could crash in C64 mode without Smart Refresh
	  when using hotkeys.

 *	- The game Stratton is working again.

 N	- Sprite handling changed. Playing games like Exploding
	  Fist, International Karate or 1942 you won't notice
	  any sprite flickering now. The only game slighty
	  affected by this kind of handling is Delta.


1.7 (11.12.1996)

 N	- Directories with separating lines are looking better
	  in the D64-Listview now.

 N	- New guide entry with tips and tricks to some programs.
	
@endnode


@node "ToDo" "To Do"

        "To Do" list


 - Fix bugs

 - A freezer is planned.

 - The possibility to connect a real 1541.

 - Full 1541 emulation for very fast Amigas (68060)

 - We'll see. :-)

@endnode

@node "Greetings" "Greetings/Thanks and Acknowledgements"

        Greetings and Thanks


Thanks to:

  Jochen Wiedmann for Flexcat.
  Helmut Neumann for Beta-Testing.
  My sister Katja for help with the translation of the docs.
   (although NLS touched them a bit ;)
  My brother Markus who supported this product at all times. :-)
  NLS for many useful hints and bug reports
  Leon Woestenberg for the dutch catalog translation
  Christer Bjarnemo for the swedish catalog translation and guide
  Peter Sandén for the MagicWB Icons
  Florent Brun for the french catalog and guide
  Alessandro Basso for the italian catalog

  and finally to:

  ALL REGISTERED MAGIC64 USERS !!!

Nick "NLS" Sardelianos maintains the AmigaGuide documentation.

@endnode

@node "C64" "...what is a C64?"

        What is a C64?


 This page is under construction. Meanwhile let me tell you that Commodore
64 is the best 8 bit computer ever. :)

@endnode

@node "Software" "Where to find C64 software"


Ftp to ftp.ac-copy.com. In the directory pub/amiga you will
find a file c64progs.lha which contains about 100 games in P00
format. All games were tested on MagiC64 and should run without
any problems. You can try these other ftp sites, too:

	arnold.hiof.no
	128.195.201.233 (Childhoods End) cdrom directory
	frodo.hiof.no

You should read the newsgroup comp.emulations.cbm for further
sources of C64 programs and games.


 This page is under construction. It will include FTP and WWW addresses.

@endnode

