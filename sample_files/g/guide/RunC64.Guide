@DATABASE "RunC64 V1.2.1 Guide"
@WIDTH 80

## $VER: RunC64 V1.2.1
## (C) Øyvind Jergan & Espen Skog 1994/95/96

################################################################################
##
## Contents
##
@NODE main "RunC64 Documentation"
@{b}


                                RunC64 V1.2.1

		   © 1994/95/96 Øyvind Jergan & Espen Skog

@{ub}

	               @{" Introduction                " link introduction}
	               @{" Credits                     " link credits}
		       @{" Requirements                " link Requirements}
	               @{" Installation                " link Installation}
		       @{" Controlling RunC64          " link Controlling}
	               @{" How to reach the authors    " link contactus}
	               @{" History                     " link history}
@ENDNODE

################################################################################
###
### Introduction
###
@NODE introduction "Introduction"
@{b}
	Introduction to RunC64@{ub}


	Run C64 is a communication program for Amiga and C64. It's not a
	modem program or anything like that, but a network system which
	enables you to send C64 files from the amiga over to the C64 and
	start them.

	This product was made so that all of you can enjoy the @{b}great@{ub}
	good old C64-games and demos using a @{b}real Commodore 64@{ub}.
	We have been testing a lot of C64-emulators for both Amiga and PC
	(PC-suger). And we have @{b}never@{ub} seen anyone that emulates
	the C64 good enough to be worth taking space on your hard-disk.
	On most of them, graphic-features like smooth-scrolling, sprites and
	raster-control have serious bugs. The music is even worse. So our
	advice to you is: If you're a real fan of the C64, use the real thing.


	RunC64 is @{b}SHAREWARE@{ub}, not Public Domain. That means that if you like
	this program and want further updates, you can be a registered owner
	by sending @{" us " link contactus} 10 NOK (2 US$). It also means that you can copy this
	program only if all files (including this) are included and nothing
	is changed. You are not allowed to replicate any portion of the
	program, nor code or data. Note also that we take no responsibility
	for the use of this program considering any damage to or failure of
	your hardware, software etc.

	You have the permission to put this unmodified and full archive on
	any BBS, FTP site, CD Rom, Magazine, Disk etc. In other words, the
	archive	may be freely distributed as long as no more than a nominal
	fee is charged to cover the media and copying costs.

@ENDNODE

################################################################################
##
## Credits
##
@NODE credits "Credits for RunC64"
@{b}
	Credits for RunC64@{ub}


	@{b}Idea & design@{ub}		@{" Øyvind Jergan " link oyvind}
				@{" Espen Skog    " link espen}
	@{b}Hardware-diagram@{ub}	@{" Espen Skog    " link espen}
	@{b}Amigaguide document@{ub}	@{" Øyvind Jergan " link oyvind}
				@{" Espen Skog    " link espen}
	@{b}Amiga-programming@{ub}	@{" Øyvind Jergan " link oyvind}
	@{b}C64-programming@{ub}		@{" Øyvind Jergan " link oyvind}
	@{b}Testing@{ub}			@{" Øyvind Jergan " link oyvind}
				@{" Espen Skog    " link espen}


	Thanks to Christian T. Steigies for the basic listing (RunC64.Basic).
	(steigies@physik.uni-kiel.d400.de)

@ENDNODE

################################################################################
##
## Requirements
##
@NODE Requirements "Requirements"
@{b}
	System Requirements@{ub}


	This program requires the following:

      -	One Amiga computer with OS1.3.
      -	One Commodore 64/128 computer.
      -	@{" Parallell cable " LINK parallell}
      -	@{" Software        " LINK software} on both computers.
@ENDNODE

################################################################################
##
## Software
##
@NODE Software "Software Requirements"
@{b}
	Software Requirements@{ub}


	A program on both the Amiga and the C64 is needed for the RunC64
	to work. The C64 program is working more like a server which only
	waits for file from Amiga like PLAY, STOP, FAST FORWARD.

	You need the following @{" files " link archive}.
@ENDNODE

################################################################################
##
## archive
##
@NODE archive "Archive"
@{b}
	The archive RunC64_v121 contains the following files:@{ub}

	Connect.IFF		Iff picture of parallell cable
	RunC64.Amiga		The Amiga part of RunC64
	RunC64.64		The C64 part of RunC64
	RunC64.Guide		Amigaguide document
	RunC64.Basic		Basic listing of "Runc64.C64"

@ENDNODE

################################################################################
##
## parallell
##
@NODE parallell "Parallell cable"
@{b}
	Parallell cable @{ub}

	

	You'll need to @{" make a cable " LINK assembling} like this:
	

	   	  AMIGA		     C64	
           	  -----              ---

		Pin Name:      Pin    Pin Name:   Pin	
	        -------------------+-----------------
		Databit 0	2  |  PB0	   C 	
		Databit 1	3  |  PB1	   D 	
		Databit 2	4  |  PB2	   E 	
		Databit 3	5  |  PB3	   F 	
		Databit 4	6  |  PB4	   H 	
		Databit 5	7  |  PB5	   J 	
		Databit 6	8  |  PB6	   K 	
		Databit 7	9  |  PB7	   L  	
		Ground	       25  |  Ground       A 	
	        Strobe          1  |  Flag #2      B 	
		Busy           11  |  PA2          M 	
	        Acknowledge    10  |  PC2          8 	 

		(Hook up to the Amiga Parallell and the c64 user-port)
@ENDNODE

################################################################################
##
##Assembling
##
@NODE assembling "Assembling"
@{b}
	How to assemble the hardware@{ub}


	This is quite easy. First you got to buy two connectors and a
        piece of cable with about 12 wires. Buy a 25Pin D-SUB Male
        connector and "user-port" connector for the C64.

	Making the cable is about it. Make sure you have soldered right
	and that there are no short circuits because they might kill your
	i/o ports on both the Amiga and the C64 and in worst case destroy
	the computers totally (It'll be expensive to fix it).

	When you have made sure the cable is allright, connect the two
	computers together.
@ENDNODE

################################################################################
##
## Installation
##
@NODE installation "Installation"
@{b}
	Installing RunC64@{ub}

      -	Be sure both computers are off, and connect the @{" parallell cable " LINK parallell}

      -	Make a directory on you harddisk called RunC64 and copy all the
	@{" files " link archive} in the archive into this directory.

      - Copy the file RUNC64.64 over to a 5¼ C64 disk.
	If you have problems concerning this, send us a 5¼ disk, and we will
	send it back containing this file. (Enclose unused stamps)
	
	If you want, you can type the listing "RunC64.basic" onto the c64 and
	it will produce the file "RunC64.C64" for you. Only do this if you
	are sure you cannot send "RunC64.C64" to the c64 yourself, cos it's
	very boring to type all those DataLines (We all know that, right?)

	To run this basic program will save a file to the diskdrive called
	"RUNC64". This will be an exact copy of the program in this archive
	called "RunC64.C64".

@ENDNODE

################################################################################
##
## Controls
##
@NODE Controlling "Controlling RunC64"
@{b}
	Controlling RunC64@{ub}

@{b}
	The template for RunC64:@{ub}

	NAME=FILENAME/K

	NAME		Name for the file you want transfer and start.

@{b}
	How to transfere files@{ub}

      -	First, follow all the steps in the @{" installation " link installation} procedure
	correctly.
 
      - Load the file RunC64.64 on the C64. Type "run" [cr].

	The screen should look like this:

	.-------------------------------------------.
	|					    |
	|   RunC64 (c) Øyvind Jergan & Espen Skog   |
	|                                           |
        |                                           |
	|                                           |
	|                                           |
	|					    |
	|					    |
	|					    |
	|					    |
	| 					    |
	|                                           |
	`-------------------------------------------'

      -	Start RunC64.Amiga with the C64file as argument. 
              (e.g: RunC64.Amiga NAME=Ram:C64FILE)
	This will work aswell: RunC64.Amiga Ram:C64FILE

      -	After a few seconds, the file should have been transfered and will
	be started on the C64.
	(If the file don't contain a basic program, nothing will happen on
	the C64, but the file will be transfered correctly though.)

      -	Note that if you want to transfer another C64-program, in most
	cases, the program RunC64.64 must be reloaded. It is located at 
	$0801-$0a00, and most programs overwrite this area.

@{b}
	Some details@{ub}

      -	If you wonder where in the memory the file have been transfered, 
	just look at the first four hexadesimal digits $WXYZ in the file
	(2 bytes). The start-adress will then be $YZWX.
	(Usualy, for basic-programs, $YZWX = $0801.)

      -	While transfering, the C64-program will be located at $0340.
	You can therefore use RunC64 to transfer files located from
	$0400 to $ffff. (This is not the case in many simular programs.
	
      -	When you start RunC64.C64 it will read 64 bytes from the paralell port
	to make the buffer is empty. You must therefore ALWAYS load and start
	the 64 part BEFORE you start sending data to the C64 from the amiga
	using RunC64.Amiga.

      -	We have defined a button in DOpus named RunC64. By selecting the 
	desired program to transfer and pressing the RunC64 button you won't
	have to run from CLI all the time. I've also made a file-type for the 
	C64 games because all of them start with the bytes $01 $08
	($0801 = basic start on th c64). And all I have to do is to double 
	click on the C64 program and it's sent to the c64 and executed 
	automatically.

      -	If you by an accident send a file from the amiga and the c64 program 
	RunC64.C64 ain't loaded, the Amiga will still put the program on hold 
	on the paralell port and it will stay there until the c64 empties it.
	To empty the paralell port just start RunC64.C64 and wait for transfer
	to finish. Reset the C64 and load RunC64.C64 again to initialize both
	parts.


      -	@{" Espen " link espen} got tired of loading RunC64.C64 every time he wanted to try
	out another game, so he decided to make a cartridge. If you have 
	a eprom-kit just burn the file RUNC64.C64 as a normal basic program.
	This way you just have to reset the computer and RunC64.C64 is 
	auto-loaded the the cartridge. This made his life a hell of a lot 
	easier.

@ENDNODE

################################################################################
##
##ContactUs
##
@NODE ContactUs "Contact Us"
@{b}
	Contact us for the following reasons@{ub}

      -	Paying the shareware fee.
      - Problems/suggestions concerning RunC64.
      - Swapping C64 software (music, games, programs and demos) on the amiga.

	@{" Øyvind Jergan " link oyvind}
	@{" Espen Skog    " link espen}

@ENDNODE

##
##Espen Skog
##
@NODE espen "Espen Skog"

	Espen Skog
	Heer Alle 8
	N-1445 Heer
	Norway


	Tel   : +47-64 93256
	E-Mail: espen.skog@infolink.no (espens@post.skolesjefen.oslo.no)
	WWW   : http://www.skolesjefen.oslo.no/skole/sofienberg/espen/espen.htm
	IRC   : Palm

@ENDNODE

##
##Øyvind Jergan
##
@NODE oyvind "Øyvind Jergan"

	Øyvind Jergan
	Klostergaten 2-4, 3B
	7030 Trondheim
	Norway

	or

	Øyvind Jergan
	Vestbygata 56
	2000 Lillestrøm
	Norway


	Tel   :	+47-63 815894
	E-Mail: oyvindje@stud.unit.no

@ENDNODE

################################################################################
##
## History
##
@NODE history "History of RunC64"
@{b}
	History@{ub}
	------- 


@{b}
	Version 1.2.1, February 1996@{ub}

      - Added a basic listing which produce the c64 part of runc64 directly
	onto the diskrive.

      - Fixed up the Doc a little. No major changes in the program.


@{b}
	Version 1.2, February 1995@{ub}
        (However, released in 1996 for some reason)

      - AmigaGuide document added.

      -	Some bugfix.



@{b}
	Version 1.1, 6th november 1994@{ub}
	(only released in norway)

      -	You can now transfer files located from $0400 to $ffff.

      -	Should work with all sorts of crunched files. (Many of
      	the old C64-decrunchers use the start and end load-adresses
	automatically set by the kernal-loader as start and end
	limits for decrunching, to save a few bytes. These adresses
	are now also set by the receiveprogram when transfering
	files, so there should be no problems using such files.)

@{b}
	Version 1.0@{ub}
	(never released to public)

      - First release.

@ENDNODE
