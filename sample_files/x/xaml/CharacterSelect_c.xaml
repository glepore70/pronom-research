<ls:UIWidget x:Name="CharacterSelect_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:ls="clr-namespace:ls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             
             d:DesignHeight="2160" d:DesignWidth="3840">

    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/Radials_c.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ls:UIWidget.Resources>
    
    <ContentControl Template="{DynamicResource RadialTemplate}">
        <Grid >
            <ls:LSGrid>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="WidgetClosing">
                        <i:InvokeCommandAction Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="UI_HUD_RadialMenu_Close"/>
                        <i:InvokeCommandAction Command="{Binding DataContext.SelectCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding LocalFocus.DataContext ,ElementName=characterList}" IsEnabled="{Binding LocalFocus ,ElementName=characterList, Converter={StaticResource NullToBoolFalseConverter}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ls:LSGrid>

            <ls:LSRadialList x:Name="characterList" FixedAmount="4" ItemsSource="{Binding CurrentPlayer.AssignedCharacters}" LeftEvent="UIRadialLeft" RightEvent="UIRadialRight" UpEvent="UIRadialUp" DownEvent="UIRadialDown"  HalfElementOffset="True" 
                         PlayerID="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                         Style="{DynamicResource ControllerRadialListStyle}" 
                         InputOnChildren="{Binding Path=IsChecked, ElementName=toggleFocusBtn}" VerticalAlignment="Center" HorizontalAlignment="Center">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction  Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"  CommandParameter="UI_HUD_RadialMenu_Move"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <ei:ChangePropertyAction TargetName="characterList" PropertyName="SelectedItem" Value="{Binding CurrentPlayer.SelectedCharacter}"/>
                        <i:InvokeCommandAction  Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"   CommandParameter="UI_HUD_RadialMenu_Open"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ls:LSRadialList>

            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal">
                <ls:LSButton Style="{StaticResource ControllerButton}" VerticalAlignment="Center" DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIRadialUp'}" 
                                 Content="{Binding Source='UIBtnHint_Navigate',Converter={StaticResource TranslatedStringConverter}}"/>

                <ls:LSToggleButton x:Name="toggleFocusBtn" VerticalAlignment="Center" 
                               DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}">

                    <ls:LSToggleButton.Style>
                        <Style TargetType="ls:LSToggleButton" BasedOn="{StaticResource ToggleControllerButton}">

                            <Setter Property="IsEnabled" Value="True" />
                            <Setter Property="Content" Value="{Binding Source='UIBtnHint_SelectFollower',Converter={StaticResource TranslatedStringConverter}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LocalFocus.Tag ,ElementName=characterList}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding LocalFocus ,ElementName=characterList}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Enabled}" Value="False">
                                    <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
                                </DataTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
                                </Trigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{Binding Source='UIBtnHint_SelectParty',Converter={StaticResource TranslatedStringConverter}}" />
                                </Trigger>


                            </Style.Triggers>
                        </Style>
                    </ls:LSToggleButton.Style>
                </ls:LSToggleButton>

                <ls:LSButton Style="{StaticResource ControllerButtonWBG}" 
                             DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIShowInfo'}"
                             Margin="20,0" 
                             Content="{Binding Source='UIBtnHint_ToggleGrouping',Converter={StaticResource TranslatedStringConverter}}" 
                             Command="{Binding DataContext.TogglePartyGrouping, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                             CommandParameter="{Binding Path=SelectedItem, ElementName=characterList}"/>

                <ls:LSButton Style="{StaticResource ControllerButtonWBG}" 
                             DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}"
                             IsEnabled="{Binding Path=SelectedItem.Stats.Level.LevelUpAvailable, ElementName=characterList}"
                             Margin="20,0" 
                             Content="{Binding Source='UI_CC_Do_Level_Up',Converter={StaticResource TranslatedStringConverter}}" 
                             Command="{Binding DataContext.StartLevelUp, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                             CommandParameter="{Binding Path=SelectedItem, ElementName=characterList}"/>                
                
                <ls:LSButton Style="{StaticResource ControllerButtonWBG}" 
                             DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                             Margin="20,0" 
                             Content="{Binding Source='UIBtnHint_Close',Converter={StaticResource TranslatedStringConverter}}" 
                             Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                             CommandParameter="CloseCharacterSelect"/>
            </StackPanel>
            
            <ls:LSInputBinding BoundEvent="PartyManagement" Visibility="Collapsed" IsEnabled="True" 
                                            PlayerID="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LSInputBindingReleased">
                        <i:InvokeCommandAction Command="{Binding DataContext.CustomEvent,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseCharacterSelect"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ls:LSInputBinding>

        </Grid>
    </ContentControl>

</ls:UIWidget>