# Jedi Knight Cog Script
#
# ITEM_PROTECT.COG
#
# ITEM Script - Protect
#  Bin 60
#
# [YB]
#
# (C) 1997 LucasArts Entertainment Co. All Rights Reserved


symbols

thing			player

flex			protect
flex			protectLeft
flex			damage
flex			halfdamage
flex			type

sound			hitsnd=KprotectHit01.wav

message		damaged

end

# ========================================================================================

code

damaged:
	player = GetSenderRef();
	protect = GetInv(player, 60);
	damage = GetParam(0);
	
	if(protect > 0)
	{
		type = GetParam(1);
		protectsLeft = protect;
	
		// If damage from energy or fire.
		if((type == 2) || (type == 4))
		{
			AddDynamicTint(player, 0, damage/50, 0);
			PlaySoundThing(hitsnd, player, 1.0, -1, -1, 128);
	
			// Shields do full protection until they are at 50 or less.
			shieldsLeft = shields - damage;
			if(shieldsLeft > 0)
			{
				damage = 0;
			}
			else
				if(shields > 50)
			{
				damage = damage - (shields - 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
			}
	
			// Scale what damage is left by shields.
			if(damage > 0)
			{
				damage = damage * (1 - shieldsLeft / 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
			}
	
			// Inventory system will minimize shields at 0.
			SetInv(player, 60, shieldsLeft);
		}

		// If damage from saber.
		if(type == 16)
		{
			AddDynamicTint(player, 0, damage/50, 0);
         PlaySoundThing(hitsnd, player, 1.0, -1, -1, 0);
	
         // Shields do half protection
			halfdamage = damage / 2;
			damage     = halfdamage;
			
			shieldsLeft = shields - damage;
			if(shieldsLeft > 0)
			{
				damage = 0;
			}
			else
				if(shields > 50)
			{
				damage = damage - (shields - 9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
			}
	
			// Scale what damage is left by shields.
			if(damage > 0)
			{
				damage = damage * (1 - shieldsLeft / 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999);
			}
	
			// Inventory system will minimize shields at 0.
			SetInv(player, 60, shieldsLeft);

			// add the original half damage back
			damage = damage + halfdamage;
		}
	}

	ReturnEx(damage);
	Return;

end

