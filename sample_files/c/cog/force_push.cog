# Jedi Knight Cog Script
#
# FORCE_PUSH.COG
#
# FORCEPOWER Script - Push
#  Light Side Power
#  Bin 27
#
# [YB]
#
# (C) 1997 LucasArts Entertainment Co. All Rights Reserved


symbols

thing       player                           local
thing       victim                           local
thing       potential                        local

flex        mana                             local
flex        cost=10.0                        local
flex        delay=15.0                        local
int         rank                             local
int         count                            local
int         retval=0                         local
int         dummy                            local

flex        dot                              local
flex        maxDot                           local

sound       blindingSound=ForceBlind01.WAV   local
template    cone_tpl=+force_blind            local

int         active=0                         local

message     startup
message     activated
message     deactivated
message     pulse
message     timer
message     newplayer
message     killed
message     deselected
message     selected

end

# ========================================================================================

code

startup:
   player = GetlocalPlayerThing();

   Return;

# ........................................................................................

activated:
   if(active) Return;

   mana = GetInv(player, 14);
   rank = GetInv(player, 24);

   if(mana >= cost)
   {
      victim = -1;
      active = 1;
      SetInvActivated(player, 27, 1);
      SetPulse(0.33);
   }

   Return;

# ........................................................................................

pulse:
   // Check all things for our victim.
   victim = -1;
   maxDot = 0;

   // Search for all players and actors.
   potential = FirstThingInView(player, 30 + 15 * rank, 8, 0x404);
   while(potential != -1)
   {
      if(
         HasLOS(player, potential) &&
         (potential != player) &&
         (VectorDist(GetThingPos(player), GetThingPos(potential)) <= (1 + rank)) &&
         !(GetThingFlags(potential) & 0x200) &&
         !(GetActorFlags(potential) & 0x100) &&
         !((jkGetFlags(potential) & 0x20) && !IsInvActivated(player, 23))
        )
      {
         dot = ThingViewDot(player, potential);
         if(dot > maxDot)
         {
            victim = potential;
            maxDot = dot;
         }
      }
      potential = NextThingInView();
   }

   // If we have a victim...
   if(victim != -1)
   {
      jkSetTargetColors(19, 20, 18);
      jkSetTarget(victim);
   }
   else
   {
      jkEndTarget();
   }

   Return;

# ........................................................................................

deactivated:
   if((victim == -1) || (GetThingHealth(player) <= 0))
   {

      call stop_power;
      Return;
   }

   SetPulse(0);
   jkEndTarget();

   mana = GetInv(player, 14);
   if(mana >= cost)
   {
      if(GetInv(player, 65) != 1) ChangeInv(player, 14, -cost);
      SetBinWait(player, 27, 0.2);
      rank = GetInv(player, 27);

      SetTimer(delay);
      if(HasLOS(player, victim) && (victim != player))
      {
         PlayMode(player, 24);
         PlaySoundThing(blindingSound, player, 1.0, -1, -1, 0x80);
         dummy = CreateThingAtPosNR(cone_tpl, GetThingSector(player), VectorAdd(GetThingPos(player), '0.0 0.0 0.04'), '0.0 0.0 0.0');
            DetachThing(victim);
            ApplyForce(victim, VectorScale(VectorNorm(VectorSub(GetThingPos(victim),GetThingPos(player))), 150 * rank));
         SetThingLook(dummy, VectorSub(GetThingPos(victim), GetThingPos(player)));
      }
   }

   active = 0;
   SetInvActivated(player, 27, 0);

   Return;

# ........................................................................................

timer:
   // This checks that the thing ref is still assigned to the same thing
   // (remember the guy could have died and its ref reassigned to a generated thing)

   Return;

# ........................................................................................

selected:
   jkPrintUNIString(player, 27);
   Return;

# ........................................................................................

deselected:
   call stop_power;

   Return;

# ........................................................................................

killed:
   if(GetSenderRef() != player) Return;

newplayer:
   call stop_power;

   Return;

# ........................................................................................

stop_power:
   SetPulse(0);
   SetInvActivated(player, 27, 0);
   active = 0;
   jkEndTarget();

   Return;

end

