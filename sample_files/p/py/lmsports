#!/usr/bin/env python

import argparse
import datetime
import os
import sys

import rr

# -ml cannot be used with -d, -m, or -y
# But -y and -m have defaults.
the_description = 'Process BestRace race results'
parser = argparse.ArgumentParser(description=the_description)
group = parser.add_mutually_exclusive_group()
group.add_argument('-d', '--day',
                   dest='day',
                   nargs=2,
                   help='day range')
parser.add_argument('-v', '--verbose',
                    dest='verbose',
                    choices=['debug', 'info', 'warning', 'error', 'critical'],
                    default='info',
                    help='verbosity level, default is "info"')
parser.add_argument('-m', '--month',
                    dest='month',
                    default=datetime.date.today().month,
                    choices=range(1, 13),
                    type=int,
                    help='month')
parser.add_argument('-o', '--output',
                    dest='output_file',
                    default='results.html',
                    help='output file, default is results.html')
parser.add_argument('-y', '--year',
                    dest='year',
                    default=datetime.date.today().year,
                    type=int,
                    help='year')
parser.add_argument('--ml',
                    dest='membership_list',
                    help='membership list',
                    required=True)
group.add_argument('--rl', dest='race_list', help='race list')
args = parser.parse_args()

year = args.year
month = args.month
day = args.day

if args.day is not None:
    start_date = datetime.date(year, month, int(day[0]))
    stop_date = datetime.date(year, month, int(day[1]))
else:
    # Make the range the entire month up until now.
    start_date = datetime.date(year, month, 1)
    stop_date = datetime.date(year, month, datetime.datetime.now().day)

o = rr.LMSports(start_date=start_date,
                stop_date=stop_date,
                memb_list=args.membership_list,
                race_list=args.race_list,
                output_file=args.output_file,
                verbose=args.verbose)
o.run()
